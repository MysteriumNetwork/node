stages:
  - install
  - test
  - pre-release
  - build
  - release
  - post-release

variables:
  BUILD_COMMIT: $CI_COMMIT_SHORT_SHA
  BUILD_BRANCH: $CI_COMMIT_REF_NAME
  BUILD_BRANCH_SAFE: $CI_COMMIT_REF_SLUG
  BUILD_TAG: $CI_COMMIT_TAG
  BUILD_NUMBER: $CI_PIPELINE_ID
  GITHUB_OWNER: mysteriumnetwork
  GITHUB_REPO: node
  GITHUB_SNAPSHOT_REPO: node-builds

  GO_PACKAGE: github.com/mysteriumnetwork/node
  GIT_CLONE_PATH: /home/gitlab-runner/go/src/$GO_PACKAGE
  GOFLAGS: "-count=1" # Supersedes GOCACHE=off, see: https://github.com/golang/go/issues/29378#issuecomment-449383809

cache:
  key: vendor
  untracked: true
  policy: pull
  paths:
    - vendor/

before_script:
  - dep ensure -v
  # load vars generated by install:env
  - source build/env.sh

after_script:
  # docker based jobs leave files owned by root
  - sudo chown -R gitlab-runner:gitlab-runner $GOPATH

install-deps:
  stage: install
  tags: [go]
  cache:
    key: vendor
    untracked: true
    policy: pull-push
    paths:
      - vendor/
  before_script: []
  script: dep ensure -v

env:
  stage: install
  tags: [go]
  artifacts:
    paths: [build/env.sh]
  before_script:
    - dep ensure -v
  script: go run mage.go generateEnvFile

checks:
  stage: test
  tags: [go]
  script:
    - |
      go get -u \
        golang.org/x/lint/golint \
        golang.org/x/tools/cmd/goimports \
        github.com/go-swagger/go-swagger/cmd/swagger
    - bin/check_golint
    - bin/check_goimports
    - bin/check_license
    - bin/check_govet
    - bin/check_swagger

test:
  stage: test
  tags: [go]
  script: go run mage.go Test

test-e2e:
  stage: test
  tags: [go]
  script: go run mage.go -v TestE2E

create-bucket:
  stage: pre-release
  tags: [go]
  script: go run mage.go -v MakeBucket

package:linux-amd64:
  stage: build
  tags: [go]
  script: go run mage.go -v PackageLinuxAmd64

package:linux-arm:
  stage: build
  tags: [go]
  script: go run mage.go -v PackageLinuxArm

package:linux-debian-amd64:
  stage: build
  tags: [go]
  script: go run mage.go -v PackageLinuxDebianAmd64

package:linux-debian-arm:
  stage: build
  tags: [go]
  script: go run mage.go -v PackageLinuxDebianArm

package:linux-raspberry-image:
  stage: build
  tags: [go]
  script: go run mage.go -v PackageLinuxRaspberryImage

package:osx-amd64:
  stage: build
  tags: [go]
  script: go run mage.go -v PackageOsxAmd64

package:windows-amd64:
  stage: build
  tags: [go]
  script: go run mage.go -v PackageWindowsAmd64

package:ios:
  stage: build
  tags: [go]
  script: go run mage.go -v PackageIOS

package:android:
  stage: build
  tags: [go]
  script: go run mage.go -v PackageAndroid

package:docker-alpine:
  stage: build
  tags: [go]
  script: go run mage.go -v PackageDockerAlpine

package:docker-ubuntu:
  stage: build
  tags: [go]
  script: go run mage.go -v PackageDockerUbuntu

package:swagger-redoc-docker:
  stage: build
  tags: [go]
  script: go run mage.go -v PackageDockerSwaggerRedoc

release:snapshot:
  stage: release
  tags: [go]
  script: go run mage.go -v ReleaseSnapshot

release:goreport:
  stage: release
  tags: [go]
  script: bin/release_goreport
  only:
    - master

remove-bucket:
  stage: post-release
  tags: [go]
  script: go run mage.go -v RemoveBucket
  when: always
