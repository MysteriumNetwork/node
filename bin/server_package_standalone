#!/bin/bash

###########################################################################
# Packaging script which creates standalone package.
#
# Usage:
#> bin/server_package_standalone <os>
#
# Package (specific OS: linux, darwin, windows):
#> bin/server_package_standalone linux
#
# Package (specific binary):
#> BINARY=build/client/mysterium_client_darwin_amd64 bin/client_package_standalone darwin

set -e

source bin/helpers/output.sh

OS=$1
if [[ ! "$OS" =~ ^(linux|darwin|windows)$ ]]; then
    print_error "Missing OS! Should be: linux, darwin or windows"
    exit 1
fi

BINARY=${BINARY:-"build/server/mysterium_server"}
DIR_BUILD="build/package"

# Put all files to package directory (to avoid preserving directory structure)
printf "Building Standalone package for OS '$OS' ..\n"
DIR_TEMP=`mktemp -d ${DIR_BUILD}/${tempname}.XXXXXX`

if [ "$OS" == "windows" ]; then
    cp -vp ${BINARY} ${DIR_TEMP}/mysterium_server.exe
else
    cp -vp ${BINARY} ${DIR_TEMP}/mysterium_server
fi

cp -vrp "bin/common_package/" ${DIR_TEMP}/config
cp -vrp "bin/server_package/config/." ${DIR_TEMP}/config

# Tarball package directory
if [ "$OS" == "windows" ]; then
    PACKAGE_FILE="${DIR_BUILD}/`basename -s .exe ${BINARY}`.zip"
    (cd ${DIR_TEMP} && zip -r - .) > ${PACKAGE_FILE}
else
    PACKAGE_FILE="${DIR_BUILD}/`basename ${BINARY}`.tar.gz"
    tar -zcv -f ${PACKAGE_FILE} -C ${DIR_TEMP} .
fi
tar -zcv -f ${PACKAGE_FILE} -C ${DIR_TEMP} .
rm -rf ${DIR_TEMP}

print_success "Standalone package '$PACKAGE_FILE' complete!"
exit 0
