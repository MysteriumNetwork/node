#!/bin/bash

###########################################################################
# Packaging script which creates standalone supervisor package.
#
# Usage:
#
# Package (specific OS and arch: linux, darwin, windows):
#> GOOS=darwin GOARCH=amd64 bin/package_standalone
#

set -e

source bin/helpers/output.sh
source bin/helpers/functions.sh

if [[ ! "$GOOS" =~ ^(linux|darwin|windows)$ ]]; then
    print_error "Missing OS! Should be: linux, darwin or windows"
    exit 1
fi

if [[ ! "$GOARCH" =~ ^(amd64|arm)$ ]]; then
    print_error "Missing ARCH! Should be: amd64 or arm"
    exit 1
fi

BINARY=${BINARY:-"build/supervisor/supervisor"}
DIR_BUILD="build/package"

mkdir -p $DIR_BUILD
go build -o $BINARY ./cmd/supervisor

# Put all files to package directory (to avoid preserving directory structure)
printf "Building supervisor package for OS '$GOOS/$GOARCH' ..\n"
DIR_TEMP=`mktemp -d ${DIR_BUILD}/${tempname}.XXXXXX`

if [ "$OS" == "windows" ]; then
    cp -vp ${BINARY} ${DIR_TEMP}/myst_supervisor.exe
else
    cp -vp ${BINARY} ${DIR_TEMP}/myst_supervisor
fi

# Tarball package directory
if [ "$OS" == "windows" ]; then
    PACKAGE_FILE="${DIR_BUILD}/`basename -s .exe ${BINARY}`.zip"
    (cd ${DIR_TEMP} && zip -r - .) > ${PACKAGE_FILE}
else
    PACKAGE_FILE="${DIR_BUILD}/`basename ${BINARY}`.tar.gz"
    tar -zcv -f ${PACKAGE_FILE} -C ${DIR_TEMP} .
fi
rm -rf ${DIR_TEMP}

print_success "Supervisor package '$PACKAGE_FILE' complete!"

