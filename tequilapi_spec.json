{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The purpose of this documentation is to provide developers an insight of how to\ninteract with Mysterium Node via Tequila API.\nThis should demonstrate all the possible API calls with described parameters and responses.",
    "title": "Tequila API"
  },
  "host": "localhost:4050",
  "paths": {
    "/connection": {
      "put": {
        "description": "Consumer opens connection to provider",
        "tags": [
          "Connection"
        ],
        "summary": "Starts new connection",
        "operationId": "createConnection",
        "parameters": [
          {
            "description": "Parameters for creating new connection",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/connectionRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Connection started",
            "schema": {
              "$ref": "#/definitions/statusResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/responses/errorMessage"
            }
          },
          "409": {
            "description": "Conflict. Connection already exists",
            "schema": {
              "$ref": "#/responses/errorMessage"
            }
          },
          "499": {
            "description": "Connection was cancelled",
            "schema": {
              "$ref": "#/responses/errorMessage"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/responses/errorMessage"
            }
          }
        }
      }
    },
    "/identities": {
      "post": {
        "description": "Creates identity and stores in keystore encrypted with passphrase",
        "tags": [
          "Identity"
        ],
        "summary": "Create new identity",
        "operationId": "createIdentity",
        "parameters": [
          {
            "description": "Parameters for creating new identity",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/identityCreationDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created identity",
            "schema": {
              "$ref": "#/definitions/identityDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/responses/errorMessage"
            }
          },
          "422": {
            "description": "Parameters validation error",
            "schema": {
              "$ref": "#/definitions/validationError"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/responses/errorMessage"
            }
          }
        }
      }
    },
    "/identities/{id}/registration": {
      "put": {
        "description": "Registers existing identity to Discovery API",
        "tags": [
          "Identity"
        ],
        "summary": "Register identity",
        "operationId": "registerIdentity",
        "parameters": [
          {
            "type": "string",
            "example": "0x0000000000000000000000000000000000000001",
            "description": "Ethereum Address, example 0x0000000000000000000000000000000000000001",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. Empty body"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/responses/errorMessage"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/responses/errorMessage"
            }
          },
          "501": {
            "description": "Not implemented",
            "schema": {
              "$ref": "#/responses/errorMessage"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ConnectionEndpoint": {
      "description": "ConnectionEndpoint struct represents /connection resource and it's subresources",
      "type": "object",
      "x-go-package": "github.com/mysterium/node/tequilapi/endpoints"
    },
    "FieldErrorMap": {
      "type": "object",
      "x-go-package": "github.com/mysterium/node/tequilapi/validation"
    },
    "connectionRequest": {
      "type": "object",
      "required": [
        "consumerId",
        "providerId"
      ],
      "properties": {
        "consumerId": {
          "description": "consumer identity",
          "type": "string",
          "x-go-name": "ConsumerID",
          "example": "0x0000000000000000000000000000000000000001"
        },
        "providerId": {
          "description": "provider identity",
          "type": "string",
          "x-go-name": "ProviderID",
          "example": "0x0000000000000000000000000000000000000002"
        }
      },
      "x-go-package": "github.com/mysterium/node/tequilapi/endpoints"
    },
    "errorMessage": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-package": "github.com/mysterium/node/tequilapi/utils"
    },
    "identitiesAPI": {
      "type": "object",
      "x-go-package": "github.com/mysterium/node/tequilapi/endpoints"
    },
    "identityCreationDto": {
      "type": "object",
      "properties": {
        "passphrase": {
          "type": "string",
          "x-go-name": "Passphrase"
        }
      },
      "x-go-package": "github.com/mysterium/node/tequilapi/endpoints"
    },
    "identityDto": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "identity in Ethereum address format",
          "type": "string",
          "x-go-name": "ID",
          "example": "0x0000000000000000000000000000000000000001"
        }
      },
      "x-go-package": "github.com/mysterium/node/tequilapi/endpoints"
    },
    "identityList": {
      "type": "object",
      "properties": {
        "identities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/identityDto"
          },
          "x-go-name": "Identities"
        }
      },
      "x-go-package": "github.com/mysterium/node/tequilapi/endpoints"
    },
    "identityRegistrationDto": {
      "type": "object",
      "properties": {
        "registered": {
          "type": "boolean",
          "x-go-name": "Registered"
        }
      },
      "x-go-package": "github.com/mysterium/node/tequilapi/endpoints"
    },
    "identityUnlockingDto": {
      "type": "object",
      "properties": {
        "passphrase": {
          "type": "string",
          "x-go-name": "Passphrase"
        }
      },
      "x-go-package": "github.com/mysterium/node/tequilapi/endpoints"
    },
    "statusResponse": {
      "type": "object",
      "properties": {
        "sessionId": {
          "type": "string",
          "x-go-name": "SessionID",
          "example": "4cfb0324-daf6-4ad8-448b-e61fe0a1f918"
        },
        "status": {
          "type": "string",
          "x-go-name": "Status",
          "example": "Connected"
        }
      },
      "x-go-package": "github.com/mysterium/node/tequilapi/endpoints"
    },
    "validationError": {
      "type": "object",
      "properties": {
        "errors": {
          "$ref": "#/definitions/FieldErrorMap"
        },
        "message": {
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-name": "validationErrorMessage",
      "x-go-package": "github.com/mysterium/node/tequilapi/utils"
    }
  },
  "responses": {
    "errorMessage": {
      "headers": {
        "message": {
          "type": "string"
        }
      }
    }
  }
}