version: '3'
services:

  #'external' IP detection
  ipify:
    image: owlab/ipify
    expose:
      - 3000
    networks:
      public:
        ipv4_address: 172.30.0.10

  broker:
    image: nats
    expose:
      - 4222
      - 8222
    networks:
      public:
        ipv4_address: 172.30.0.30

  db:
    image: percona:5.7
    restart: always
    expose:
      - 3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: myst_api
      MYSQL_USER: myst_api
      MYSQL_PASSWORD: myst_api
    networks:
      public:
        ipv4_address: 172.30.0.201

  #private blockchain with single miner and single node
  geth:
    image: mysteriumnetwork/geth:1.8.23
    expose:
      - 8545
    volumes:
      - geth-runtime:/ethereum/geth-runtime
      - ./geth/genesis.json:/ethereum/genesis.json
      - ./geth/keystore:/ethereum/keystore
      - ./geth/node_acc_password.txt:/ethereum/node_acc_password.txt
    command: >
      --syncmode 'full'
      --port 30311
      --rpc
      --rpcaddr '0.0.0.0'
      --rpcport 8545
      --rpcapi personal,db,eth,net,web3,txpool,miner
      --networkid 69
      --gasprice '1'
      --unlock '0xd9786b6ee6caf5cd0ef88301fc40de83bfac5594'
      --password node_acc_password.txt
      --rpcvhosts *
      --rpccorsdomain *
      --mine
    networks:
      public:
        ipv4_address: 172.30.0.202

  discovery:
    image: mysteriumnetwork/mysterium-api:0.4.1
    expose:
      - 80
    environment:
      APP_PORT: 80
      DB_HOST: db
      DB_NAME: myst_api
      DB_USER: myst_api
      DB_PASSWORD: myst_api
      ETHER_RPC_URL: "http://geth:8545"
      IDENTITY_CONTRACT: "0x1955141ba8e77a5B56efBa8522034352c94f77Ea"
      ETHER_MINING_MODE: "poa"
      DISCOVERY_VERIFY_IDENTITY: "false"
    depends_on:
      - db
      - geth
    networks:
      public:
        ipv4_address: 172.30.0.200

  forwarder:
    build:
      context: ../..
      dockerfile: e2e/docker/forwarder/Dockerfile
    depends_on:
      - broker
      - ipify
    cap_add:
      - NET_ADMIN
    volumes:
      - ../../e2e/config/named.conf:/etc/bind/named.conf
    networks:
      public:
        ipv4_address: 172.30.0.2
      priv1:
        ipv4_address: 10.100.0.2
      priv2:
        ipv4_address: 10.100.1.2

  myst-consumer:
    build:
      context: ../..
      dockerfile: bin/docker/alpine/Dockerfile
      args:
        PREPARE_ENV: e2e/helpers/prepare-priv1-run-env.sh
    depends_on:
      - broker
      - discovery
      - ipify
    cap_add:
      - NET_ADMIN
    expose:
      - 4050
    command: >
      --ip-detector=http://ipify:3000/?format=json
      --experiment-identity-check
      --localnet
      --discovery.address=http://discovery/v1
      --ether.client.rpc=http://geth:8545
      --keystore.lightweight
      daemon
    dns: 172.30.0.2
    networks:
      priv1:
        ipv4_address: 10.100.0.101

  myst-consumer2:
    image: praqma/network-multitool
    depends_on:
      - forwarder
    cap_add:
      - NET_ADMIN
    dns: 172.30.0.2
    networks:
      priv1:
        ipv4_address: 10.100.0.101
    command: bash -c "ip route add 172.30.0.0/24 via 10.100.0.2 && tail -F anything"


  myst-provider:
    build:
      context: ../..
      dockerfile: bin/docker/alpine/Dockerfile
      args:
        PREPARE_ENV: e2e/helpers/prepare-priv2-run-env.sh
    depends_on:
      - broker
      - discovery
      - ipify
      - forwarder
    cap_add:
      - NET_ADMIN
    expose:
      - 1194
      - 4050
    volumes:
      - ../../e2e/myst-provider:/var/lib/mysterium-node
    command: >
      --ip-detector=http://ipify:3000/?format=json
      --location.type=manual
      --location.country=e2e-traversal
      --experiment-identity-check
      --localnet
      --broker-address=broker
      --discovery.address=http://discovery/v1
      --ether.client.rpc=http://geth:8545
      --keystore.lightweight
      service openvpn
      --agreed-terms-and-conditions
      --identity=0xd1a23227bd5ad77f36ba62badcb78a410a1db6c5
      --identity.passphrase=localprovider
      --openvpn.port=3000
    dns: 10.100.1.1
    networks:
      priv2:
        ipv4_address: 10.100.1.102
    # command: bash -c "ip route add 172.30.0.0/24 via 10.100.0.2 && tail -F anything"

networks:
  public:
    driver: "bridge"
    ipam:
      config:
        - subnet: 172.30.0.0/24
  priv1:
    driver: "bridge"
    ipam:
      config:
        - subnet: 10.100.0.0/24
  priv2:
    driver: "bridge"
    ipam:
      config:
        - subnet: 10.100.1.0/24

volumes:
  geth-runtime:
